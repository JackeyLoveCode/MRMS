<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hiveview.mrms.mapper.FavoriteMapper" >
  <resultMap id="BaseResultMap" type="com.hiveview.mrms.pojo.Favorite" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="movieId" property="movieid" jdbcType="INTEGER" />
    <result column="collection_time" property="collectionTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="SMALLINT" />
  </resultMap>
  <sql id="limit_sql">
    limit #{condition.pageIndex},#{condition.rows}
  </sql>
  <select id="selectAllByUser"  resultType="map">
  	select  DISTINCT f.movieId,m.img_path,m.title,f.collection_time
	from favorite f
	join movie m
	on f.movieId=m.id
	where f.userId=${user.id}
    <include refid="limit_sql"/>
  </select>
  <select id="countAllByUser" resultType="java.lang.Integer">
      select  count(1)
	from favorite f
	join movie m
	on f.movieId=m.id
	where f.userId=${user.id}
  </select>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userId, movieId, collection_time, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hiveview.mrms.pojo.FavoriteExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from favorite
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from favorite
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from favorite
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hiveview.mrms.pojo.FavoriteExample" >
    delete from favorite
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hiveview.mrms.pojo.Favorite" >
    insert into favorite (id, userId, movieId, 
      collection_time, state)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{movieid,jdbcType=INTEGER}, 
      #{collectionTime,jdbcType=TIMESTAMP}, #{state,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.hiveview.mrms.pojo.Favorite" >
    insert into favorite
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="movieid != null" >
        movieId,
      </if>
      <if test="collectionTime != null" >
        collection_time,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="movieid != null" >
        #{movieid,jdbcType=INTEGER},
      </if>
      <if test="collectionTime != null" >
        #{collectionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hiveview.mrms.pojo.FavoriteExample" resultType="java.lang.Integer" >
    select count(*) from favorite
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update favorite
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.movieid != null" >
        movieId = #{record.movieid,jdbcType=INTEGER},
      </if>
      <if test="record.collectionTime != null" >
        collection_time = #{record.collectionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update favorite
    set id = #{record.id,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      movieId = #{record.movieid,jdbcType=INTEGER},
      collection_time = #{record.collectionTime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=SMALLINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hiveview.mrms.pojo.Favorite" >
    update favorite
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="movieid != null" >
        movieId = #{movieid,jdbcType=INTEGER},
      </if>
      <if test="collectionTime != null" >
        collection_time = #{collectionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=SMALLINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hiveview.mrms.pojo.Favorite" >
    update favorite
    set userId = #{userid,jdbcType=INTEGER},
      movieId = #{movieid,jdbcType=INTEGER},
      collection_time = #{collectionTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=SMALLINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>